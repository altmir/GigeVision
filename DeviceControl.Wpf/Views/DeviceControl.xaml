<UserControl x:Class="DeviceControl.Wpf.Views.DeviceControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:enums="clr-namespace:DeviceControl.Wpf.Enums"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             MinWidth="410" Width="410"
             xmlns:converters="clr-namespace:DeviceControl.Wpf.Converters"
             xmlns:genICam="clr-namespace:GenICam;assembly=GenICam"
             xmlns:controls="clr-namespace:DeviceControl.Wpf.Style">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--Resources-->
    <UserControl.Resources>
        <!--Converters-->

        <converters:AccessModeConverter x:Key="AccessModeConverter" />
        <converters:VisibilityConverter x:Key="VisibillityConverter" />
        <converters:ListCheckConverter x:Key="ListCheckConverter" />
        <converters:TreeExpandConverter x:Key="TreeExpandConverter" />
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        <converters:CheckBoxConverter x:Key="CheckBoxConverter" />
        <converters:RepresentaionConverter x:Key="RepresentaionConverter" />
        <converters:CameraStatusConverter x:Key="CameraStatusConverter" />

        <!--Enums-->
        <ObjectDataProvider x:Key="DeviceControlVisibilityList" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:DeviceControlVisibility" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--Style-->

        <!--<Style TargetType="DataGrid">
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#ccc" />
            <Setter Property="HorizontalGridLinesBrush" Value="#ccc" />
            <Setter Property="VerticalGridLinesBrush" Value="#ccc" />
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>-->

        <!--TreeView Style-->
        <Style  TargetType="TreeView">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border"  Background="{TemplateBinding Background}">
                            <UniformGrid HorizontalAlignment="Stretch">
                                <ItemsPresenter />
                            </UniformGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="ToggleButton" x:Key="ExpandCollapseToggleStyle">
            <Setter Property="Focusable"  Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="8" Height="8" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Data="M20 38 L20 36 L22 36 L22 34 L20 34 L20 32 L18 32 L18 34 L16 34 L16 36 L18 36 L18 38 Z" Stretch="Uniform" Fill="{TemplateBinding Foreground}" />
                            <Path x:Name="Expanded"  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Data="M22 36 L22 34 L16 34 L16 36 Z" Visibility="Hidden" Stretch="Uniform" Fill="{TemplateBinding Foreground}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <!--<Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type UniformGrid}, Mode=FindAncestor,AncestorLevel=3}}" />-->
            <Setter Property="IsExpanded" Value="{Binding  RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.IsExpanded}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Bd"   Background="{TemplateBinding Background}"  BorderThickness="0" Padding="3, 2 , 3 , 2" Margin="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Cursor="Hand"  Margin="0 ,0, 3, 0" HorizontalContentAlignment="Left"  Grid.Column="0" x:Name="Expander"  Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"   Grid.Row="1"  HorizontalAlignment="Stretch" Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TreeView Templates-->

        <!--Category-->
        <HierarchicalDataTemplate  DataType="{x:Type genICam:GenCategory}"  ItemsSource="{Binding PFeatures}">
            <TextBlock  Text="{Binding GroupName}" FontWeight="Bold" />
        </HierarchicalDataTemplate>

        <!--TextBox-->
        <HierarchicalDataTemplate DataType="{x:Type genICam:GenStringReg}"  ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="150" />
                </Grid.ColumnDefinitions>
                <TextBlock  Grid.Column="0" Text="{Binding CategoryProperties.Name}"  FontWeight="Regular" />

                <TextBox Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding Value}" IsEnabled="{Binding AccessMode, Converter={StaticResource AccessModeConverter }}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding SetValueCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding SetValueCommand , Mode=OneWay}" />
                    </TextBox.InputBindings>
                </TextBox>
            </Grid>
        </HierarchicalDataTemplate>

        <!--Integer Inputs-->
        <DataTemplate x:Key="IntegerControl">
            <ContentControl  x:Name="IntegerControl" Content="{Binding}" />

            <DataTemplate.Triggers>
                <!--For HexNumber-->
                <DataTrigger Binding="{Binding Representation}" Value="HexNumber">
                    <Setter Property="ContentTemplate" TargetName="IntegerControl">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBox  HorizontalAlignment="Stretch" Text="{Binding Value, Converter={StaticResource RepresentaionConverter}}"   IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}" x:Name="textBox">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding SetValueCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding SetValueCommand , Mode=OneWay}" CommandParameter="{Binding ElementName=textBox, Path=Text}"  />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <!--For Linear-->
                <DataTrigger Binding="{Binding Representation}" Value="Linear">
                    <Setter Property="ContentTemplate" TargetName="IntegerControl">
                        <Setter.Value>
                            <DataTemplate>
                                <controls:NumericUpDown  x:Name="IntegerUpDown"
                                    Minimum="{Binding Min, Mode=OneWay}"
                                    Maximum="{Binding Max, Mode=OneWay}"
                                    Value="{Binding Value}"
                                    IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}"
                                    Increment="{Binding Inc}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostKeyboardFocus" SourceName="IntegerUpDown">
                                            <i:InvokeCommandAction Command="{Binding SetValueCommand, Mode=OneWay }" CommandParameter="{Binding ElementName=IntegerUpDown, Path=Value}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding SetValueCommand , Mode=OneWay}" CommandParameter="{Binding ElementName=IntegerUpDown, Path=Value}"  />
                                    </TextBox.InputBindings>
                                </controls:NumericUpDown>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <!--For Pure Number-->
                <DataTrigger Binding="{Binding Representation}" Value="PureNumber">
                    <Setter Property="ContentTemplate" TargetName="IntegerControl">
                        <Setter.Value>
                            <DataTemplate>
                                <controls:NumericUpDown  x:Name="IntegerUpDown"
                                    Minimum="{Binding Min, Mode=OneWay}"
                                    Maximum="{Binding Max, Mode=OneWay}"
                                    Value="{Binding Value}"
                                    IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}"
                                    Increment="{Binding Inc}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostKeyboardFocus" SourceName="IntegerUpDown">
                                            <i:InvokeCommandAction Command="{Binding SetValueCommand, Mode=OneWay }" CommandParameter="{Binding ElementName=IntegerUpDown, Path=Value}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding SetValueCommand , Mode=OneWay}" CommandParameter="{Binding ElementName=IntegerUpDown, Path=Value}"  />
                                    </TextBox.InputBindings>
                                </controls:NumericUpDown>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--NumericUpDown Integer-->
        <HierarchicalDataTemplate  DataType="{x:Type genICam:GenInteger}" ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="145" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Style>
                <TextBlock Grid.Column="0" Text="{Binding CategoryProperties.Name}"  FontWeight="Regular" />
                <ContentPresenter Grid.Column="1"  ContentTemplate="{StaticResource IntegerControl}" />
            </Grid>
        </HierarchicalDataTemplate>

        <!--NumericUpDown Float-->
        <HierarchicalDataTemplate DataType="{x:Type genICam:GenFloat}" ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="145" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Style>
                <TextBlock Grid.Column="0" Text="{Binding CategoryProperties.Name}"  FontWeight="Regular" />
                <ContentPresenter Grid.Column="1" ContentTemplate="{StaticResource IntegerControl}" />
            </Grid>
        </HierarchicalDataTemplate>

        <!--ComoboBox-->
        <HierarchicalDataTemplate DataType="{x:Type genICam:GenEnumeration}" ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="145" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Style>

                <TextBlock Grid.Column="0" Text="{Binding CategoryProperties.Name}"  FontWeight="Regular" />
                <ComboBox  Grid.Column="1" ItemsSource="{Binding Entries}" DisplayMemberPath="Key"
                           SelectedItem="{Binding CurrentEnumEntry, Mode=OneWay}" 
                           IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}" x:Name="combobox">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SetValueCommand}"  CommandParameter="{Binding ElementName=combobox, Path=SelectedValue.Value.Value}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>
        </HierarchicalDataTemplate>

        <!--Button-->
        <HierarchicalDataTemplate DataType="{x:Type genICam:GenCommand}" ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="145" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Style>

                <TextBlock Grid.Column="0" Text="{Binding CategoryProperties.Name}"  FontWeight="Regular" />
                <Button Grid.Column="1" Content="{Binding CategoryProperties.Name}"
                        IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}"
                        Command="{Binding SetValueCommand}" />
            </Grid>
        </HierarchicalDataTemplate>

        <!--CheckBox-->
        <HierarchicalDataTemplate DataType="{x:Type genICam:GenBoolean}" ItemsSource="{Binding PFeatures}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="145" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Style>
                <TextBlock Grid.Column="0" Text="{Binding CategoryProperties.Name}" />
                <CheckBox Grid.Column="1" Content="{Binding CategoryProperties.Name}"
                          IsChecked="{Binding Value}"
                          IsEnabled="{Binding PValue, Converter={StaticResource AccessModeConverter}}"
                          Command="{Binding SetValueCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding GetValueCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </CheckBox>
            </Grid>
        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <!--Content-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="140" />
        </Grid.RowDefinitions>
        <!--Header-->
        <Border Padding="3" Grid.Row="0" Background="#eee" BorderBrush="#aaa" BorderThickness="0 0 0 1">
            <Grid VerticalAlignment="Center">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <ToggleButton Grid.Column="0" IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  HorizontalContentAlignment="Center">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked"  Value="True">
                                        <Setter Property="Content" Value="UnExpand All" />
                                    </Trigger>
                                    <Trigger Property="IsChecked"  Value="False">
                                        <Setter Property="Content" Value="Expand All" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center" Grid.Column="2" Background="DarkRed" Foreground="White" Text="ReadOnly" Visibility="{Binding CameraStatus, Converter={StaticResource CameraStatusConverter}}" />
                    <ComboBox Grid.Column="4" x:Name="VisibilitySelector" SelectedIndex="0" ItemsSource="{Binding Source={StaticResource DeviceControlVisibilityList}}" />
                    <!--<CheckBox Grid.Column="0" Content="Expand All" IsChecked="True" HorizontalAlignment="Left" Padding="2 0 5 0 "   VerticalAlignment="Center" />-->
                </Grid>
            </Grid>
        </Border>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" controls:TopMouseScrollPriorityBehavior.TopMouseScrollPriority="True">
            <!--<TreeView  ItemsSource="{Binding Categories}"  />-->

            <TreeView  ItemsSource="{Binding Categories}">
                <TreeView.ItemContainerStyle>

                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource VisibillityConverter}">
                                    <Binding Path="CategoryProperties.Visibility" />
                                    <Binding Path="SelectedItem"  ElementName="VisibilitySelector" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="IsExpanded" Value="{Binding  RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.IsExpanded}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <i:Interaction.Behaviors>
                    <controls:BindableSelectedItemBehavior  SelectedItem="{Binding SelectedCategory, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
            </TreeView>
        </ScrollViewer>

        <!--Footer-->
        <Border Grid.Row="2" Background="#eee">
            <ScrollViewer Visibility="{Binding SelectedCategory, Converter={StaticResource NullVisibilityConverter}}">
                <StackPanel Margin="5">
                    <StackPanel>
                        <TextBlock Text="{Binding SelectedCategory.GroupName}" Visibility="{Binding SelectedCategory.GroupName, Converter={StaticResource NullVisibilityConverter}}" FontWeight="Bold" FontSize="14" />
                        <TextBlock Text="{Binding SelectedCategory.CategoryProperties.Name}" FontWeight="Bold" FontSize="14" />
                        <TextBlock Text="{Binding  SelectedCategory.CategoryProperties.Description}" TextWrapping="WrapWithOverflow" />
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Visibility="{Binding SelectedCategory.CategoryProperties, Converter={StaticResource NullVisibilityConverter}}">

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Visibility: " />
                            <TextBlock  Text="{Binding  SelectedCategory.CategoryProperties.Visibility}"  FontWeight="Bold" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Streamable: " />
                            <TextBlock Text="{Binding  SelectedCategory.CategoryProperties.IsStreamable}" FontWeight="Bold" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>